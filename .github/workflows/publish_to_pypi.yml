name: Build and Publish

on: [ workflow_dispatch ]
#on:
#  release:
#    types: [created]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            job_name: "Ubuntu AMD64 Build"
          - os: macos-14
            job_name: "MacOs 14 ARM64 Build"
          - os: macos-13
            job_name: "MacOs 13 x86_64 Build"
    steps:
      - uses: actions/checkout@v4
      # This step checks out your repository's code
      # By default, this runner doesn't have a copy of your repository's code
      # The checkout action copies your repository's code into the runner's workspace          
      - name: Set up Python
        uses: actions/setup-python@v4
        # set up a specific Python version (like Python 3.8)
        # This step installs Python 3.8 on the runner
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
           CIBW_ARCHS_MACOS: "native"
           CIBW_ARCHS_LINUX: "x86_64"
           CIBW_BEFORE_ALL_LINUX: "sh build-linux.sh"
           CIBW_BEFORE_ALL_MACOS: "sh build-macos.sh"
           CIBW_BEFORE_ALL_WINDOWS: " "
        with:
           output-dir: wheelhouse

      # Upload and download data
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

      - name: Publish to PyPI
        run: twine upload wheelhouse/*.whl --verbose --skip-existing
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
